View(location)
View(location)
location =
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2002", n_county >= 7)
View(brfss)
View(brfss)
View(location)
View(location)
location =
brfss %>%
separate(location, into = c("state", "county"), sep = "-")
View(location)
View(location)
location_2002 =
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2002", n_county >= 7) %>%
knitr::kable(caption = "States: 7 or more locations in 2002")
location_2010 =
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2010", n_county >= 7) %>%
knitr::kable(caption = "States observed at 7 or more locations in 2002")
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2002", n_county >= 7) %>%
knitr::kable(caption = "States: 7 or more locations in 2002")
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2010", n_county >= 7) %>%
knitr::kable(caption = "States observed at 7 or more locations in 2002")
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
select(year, response, state,data_value) %>%
filter(response == "Excellent") %>%
group_by(state) %>%
summarize(
mean = mean(data_value)) %>%
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-") %>%
select(year, response, state,data_value) %>%
filter(response == "Excellent") %>%
group_by(state) %>%
summarize(
mean = mean(data_value))
View(brfss)
View(brfss)
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2010", n_county >= 7) %>%
knitr::kable(caption = "States observed at 7 or more locations in 2002")
a=
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2010", n_county >= 7)
View(a)
View(a)
a=
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2002", n_county >= 7)
View(a)
View(a)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state,data_value) %>%
filter(response == "Excellent") %>%
group_by(state) %>%
summarize(
mean = mean(data_value))
View(mean)
View(mean)
View(brfss)
View(brfss)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state,data_value) %>%
filter(response == "Excellent") %>%
group_by(state)
View(mean)
View(mean)
View(mean)
View(mean)
View(brfss)
View(brfss)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state,data_value)
View(mean)
View(mean)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state, county, data_value) %>%
filter(response == "Excellent") %>%
group_by(state)
View(mean)
View(mean)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state, county, data_value) %>%
filter(response == "Excellent") %>%
group_by(state) %>%
summarize(
mean = mean(data_value))
View(mean)
View(mean)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state, county, data_value) %>%
filter(response == "Excellent") %>%
group_by(state) %>%
summarize(
mean = mean(data_value, na.rm=TRUE))
View(mean)
View(mean)
View(brfss)
View(brfss)
mean =
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state, county, data_value) %>%
filter(response == "Excellent") %>%
group_by(state)
View(mean)
View(mean)
View(brfss)
View(brfss)
mean =
brfss %>%
drop_na() %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
select(year, response, state, county, data_value) %>%
filter(response == "Excellent") %>%
group_by(state) %>%
summarize(
mean = mean(data_value))
View(mean)
View(mean)
View(mean)
View(mean)
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# selected only needed variables
select(year, response, state, data_value) %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state) %>%
# take the mean of data_value
summarize(
mean = mean(data_value)) %>%
ungroup()
View(mean)
View(mean)
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state) %>%
# take the mean of data_value
summarize(
mean = mean(data_value)) %>%
ungroup() %>%
# selected only needed variables
select(year, response, state, data_value)
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state, year) %>%
# take the mean of data_value
summarize(
mean = mean(data_value)) %>%
ungroup() %>%
# selected only needed variables
select(year, response, state, data_value)
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# selected only needed variables
select(year, response, state, data_value)
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state, year) %>%
# take the mean of data_value
summarize(
mean = mean(data_value))
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# selected only needed variables
select(year, response, state, data_value) %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state, year) %>%
# take the mean of data_value
summarize(
mean = mean(data_value))
View(mean)
View(mean)
mean %>%
group_by(state) %>%
ggplot(aes(x = year, y = mean, group = state))
geom_line()+
ggtitle(Spaghetti Plot: Mean value of each state across years)
mean %>%
group_by(state) %>%
ggplot(aes(x = year, y = mean, group = state))
geom_line()+
ggtitle("Spaghetti Plot: Mean value of each state across years")
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")
library (tidyverse)
library (dplyr)
library(readxl)
library(patchwork)
# library for hw3 datasets
library(p8105.datasets)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, warning = TRUE,
fig.width = 6,
fig.asp = .6,
out.width = "100%"
)
theme_set(theme_bw() + theme(legend.position = "bottom"))
options(tibble.print_min = 3)
# Load dataset for problem 2 from library P8105.datasets
data("brfss_smart2010")
summary(brfss_smart2010)
head(brfss_smart2010)
brfss =
janitor::clean_names(brfss_smart2010) %>%
# rename long varaibles
rename(state = locationabbr, location = locationdesc, CI_low = confidence_limit_low, CI_upper = confidence_limit_high) %>%
# focus on the "Overall Health" topic
filter(topic == "Overall Health") %>%
# recode response as a factor varaible
mutate(
response = forcats::fct_relevel(response, c("Excellent", "Very good", "Good", "Fair", "Poor"))
) %>%
# select only needed variables
select(year, location, response, data_value) %>%
#organize responses ordered from “Poor” to “Excellent”
arrange(desc(response))
# make sure response is sorted correctly
head(brfss, 3)
tail(brfss, 3)
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# selected only needed variables
select(year, response, state, data_value) %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state, year) %>%
# take the mean of data_value
summarize(
mean = mean(data_value))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(legend.position = "right"))
library (tidyverse)
library (dplyr)
library(readxl)
library(patchwork)
# library for hw3 datasets
library(p8105.datasets)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, warning = TRUE
)
options(tibble.print_min = 3)
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(100,12,100,12, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(21,1,21,1, "cm", legend.position = "bottom")))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme(plot.margin = margin(21,1,21,1, "cm", legend.position = "bottom")))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme(plot.margin = margin(21,1,21,1, "cm"), legend.position = "bottom"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme(plot.margin = margin(21,1,21,1, "cm"), legend.position = "right")
library (tidyverse)
library (dplyr)
library(readxl)
library(patchwork)
# library for hw3 datasets
library(p8105.datasets)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, warning = TRUE
)
#theme_set(theme_bw() + theme(legend.position = "bottom"))
options(tibble.print_min = 3)
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(21,1,21,1, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(21,1,21,1, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(100,12,100,12, "cm"), legend.position = "right"))
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# selected only needed variables
select(year, response, state, data_value) %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state, year) %>%
# take the mean of data_value
summarize(
mean = mean(data_value))
# Load dataset for problem 2 from library P8105.datasets
data("brfss_smart2010")
summary(brfss_smart2010)
head(brfss_smart2010)
brfss =
janitor::clean_names(brfss_smart2010) %>%
# rename long varaibles
rename(state = locationabbr, location = locationdesc, CI_low = confidence_limit_low, CI_upper = confidence_limit_high) %>%
# focus on the "Overall Health" topic
filter(topic == "Overall Health") %>%
# recode response as a factor varaible
mutate(
response = forcats::fct_relevel(response, c("Excellent", "Very good", "Good", "Fair", "Poor"))
) %>%
# select only needed variables
select(year, location, response, data_value) %>%
#organize responses ordered from “Poor” to “Excellent”
arrange(desc(response))
# make sure response is sorted correctly
head(brfss, 3)
tail(brfss, 3)
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2002", n_county >= 7) %>%
knitr::kable(caption = "States: 7 or more locations in 2002")
brfss %>%
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
group_by(state, year) %>%
summarize(
n_county = n()) %>%
filter(year == "2010", n_county >= 7) %>%
knitr::kable(caption = "States observed at 7 or more locations in 2002")
mean =
brfss %>%
# remove missing data
drop_na() %>%
# separated location into state and city/county
separate(location, into = c("state", "county"), sep = "-", extra = "drop") %>%
# selected only needed variables
select(year, response, state, data_value) %>%
# limited only to Excellent responses
filter(response == "Excellent") %>%
# group by state
group_by(state, year) %>%
# take the mean of data_value
summarize(
mean = mean(data_value))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(100,12,100,12, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(21,1,21,1, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(100,50,100,50, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(100,30,100,30, "cm"), legend.position = "right"))
mean %>%
group_by(state) %>%
ggplot ()+
geom_line((aes(x = year, y = mean, group = state, color = state)))+
ggtitle("Spaghetti Plot: Mean value of each state across years")+
theme_set(theme_bw() + theme(plot.margin = margin(100,21,100,21, "cm"), legend.position = "right"))
